// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Raca {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(30)
  pets Pet[]

  @@map("racas")
}

model Pet {
  id              Int      @id @default(autoincrement())
  nome            String   @db.VarChar(50)
  especie         String   @db.VarChar(20)
  idade           String   @db.VarChar(20)
  ong             Ong      @relation(fields: [ongId], references: [id])
  ongId           Int
  fotos           Foto[]
  fotoCapa        Foto?    @relation("FotoCapa", fields: [fotoCapaId], references: [id])
  fotoCapaId      Int?     @unique
  descricao       String?  @db.Text
  cor             String   @db.VarChar(30)
  raca            Raca     @relation(fields: [racaId], references: [id])
  racaId          Int
  porte           Porte 
  sexo            Sexo
  castrado        Boolean  @default(false)
  vacinado        Boolean  @default(false)
  vermifugado     Boolean  @default(false)
  adotado         Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt()
  visitas         Visita[]

  @@map("pets")
}

model Foto {
  id              Int      @id @default(autoincrement())
  url             String   @db.VarChar(255)
  pet             Pet      @relation(fields: [petId], references: [id])
  petId           Int
  petFotoCapa     Pet?     @relation("FotoCapa")
  createdAt       DateTime @default(now())

  @@map("fotos")
}

model Ong {
  id       Int     @id @default(autoincrement())
  nome     String  @db.VarChar(30)
  cnpj     String  @db.VarChar(14)
  telefone String? @db.VarChar(11)
  email    String? @db.VarChar(50)
  site     String? @db.VarChar(50)
  endereco String? @db.VarChar(100)
  cidade   String? @db.VarChar(50)
  estado   String? @db.VarChar(2)
  cep      String? @db.VarChar(8)
  pets     Pet[]

  @@map("ongs")
}

model Cliente {
  id            String   @db.VarChar(36) @id @default(uuid())
  nome          String   @db.VarChar(60)
  email         String   @db.VarChar(40)
  senha         String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt  
  visita        Visita[]
  @@map("clientes")
}

model Visita {
  id        String   @db.VarChar(36) @id @default(uuid())
  cliente   Cliente  @relation(fields: [clienteId], references: [id])
  clienteId String
  pet       Pet      @relation(fields: [petId], references: [id])
  petId     Int
  data      DateTime @default(now())
  horario   String   @db.VarChar(20)
  status    String   @db.VarChar(20)
  @@map("visitas")
}


enum Porte {
  PEQUENO
  MEDIO
  GRANDE
}

enum Sexo {
  MACHO
  FEMEA
}
